import os
import django
import sys
from django.db import transaction

# Configurar entorno Django
sys.path.append('D:/1.CARRERA UNIVERSITARIA/8.NOVENO SEMESTRE/1.SISTEMAS DE INFORMACION 2/SEGUNDO PARCIAL/SEGUNDO-PARCIAL/PROYECTO_BACKEND')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Backend.settings')
django.setup()

from Cursos.models import (
    EvaluacionEntregable, 
    EvaluacionParticipacion, 
    Calificacion,
    PromedioTrimestral,
    PromedioAnual
)

def mostrar_estadisticas_antes():
    """Muestra estad√≠sticas antes de la eliminaci√≥n"""
    print("\n" + "="*60)
    print("üìä ESTAD√çSTICAS ANTES DE LA ELIMINACI√ìN")
    print("="*60)
    
    # Contar evaluaciones
    eval_entregables = EvaluacionEntregable.objects.count()
    eval_participacion = EvaluacionParticipacion.objects.count()
    total_evaluaciones = eval_entregables + eval_participacion
    
    # Contar calificaciones
    total_calificaciones = Calificacion.objects.count()
    
    # Contar promedios
    promedios_trimestrales = PromedioTrimestral.objects.count()
    promedios_anuales = PromedioAnual.objects.count()
    
    print(f"üìù Evaluaciones Entregables: {eval_entregables:,}")
    print(f"üí¨ Evaluaciones de Participaci√≥n: {eval_participacion:,}")
    print(f"üìä Total de Evaluaciones: {total_evaluaciones:,}")
    print(f"üéØ Total de Calificaciones: {total_calificaciones:,}")
    print(f"üìà Promedios Trimestrales: {promedios_trimestrales:,}")
    print(f"üìä Promedios Anuales: {promedios_anuales:,}")
    print("="*60)

def eliminar_todo():
    """
    Elimina TODAS las evaluaciones, calificaciones y promedios del sistema.
    ‚ö†Ô∏è OPERACI√ìN IRREVERSIBLE ‚ö†Ô∏è
    """
    try:
        with transaction.atomic():
            print("\nüóëÔ∏è Iniciando eliminaci√≥n completa...")
            
            # Obtener conteos antes de eliminar
            eval_entregables = EvaluacionEntregable.objects.count()
            eval_participacion = EvaluacionParticipacion.objects.count()
            total_calificaciones = Calificacion.objects.count()
            promedios_trimestrales = PromedioTrimestral.objects.count()
            promedios_anuales = PromedioAnual.objects.count()
            
            # Eliminar en orden para evitar problemas de FK
            print("1Ô∏è‚É£ Eliminando Promedios Anuales...")
            PromedioAnual.objects.all().delete()
            
            print("2Ô∏è‚É£ Eliminando Promedios Trimestrales...")
            PromedioTrimestral.objects.all().delete()
            
            print("3Ô∏è‚É£ Eliminando Calificaciones...")
            Calificacion.objects.all().delete()
            
            print("4Ô∏è‚É£ Eliminando Evaluaciones de Participaci√≥n...")
            EvaluacionParticipacion.objects.all().delete()
            
            print("5Ô∏è‚É£ Eliminando Evaluaciones Entregables...")
            EvaluacionEntregable.objects.all().delete()
            
            # Verificar eliminaci√≥n
            eval_entregables_despues = EvaluacionEntregable.objects.count()
            eval_participacion_despues = EvaluacionParticipacion.objects.count()
            total_calificaciones_despues = Calificacion.objects.count()
            promedios_trimestrales_despues = PromedioTrimestral.objects.count()
            promedios_anuales_despues = PromedioAnual.objects.count()
            
            print("\n" + "="*60)
            print("‚úÖ RESUMEN DE ELIMINACI√ìN COMPLETADA")
            print("="*60)
            print(f"üìù Evaluaciones Entregables eliminadas: {eval_entregables:,}")
            print(f"üí¨ Evaluaciones de Participaci√≥n eliminadas: {eval_participacion:,}")
            print(f"üéØ Calificaciones eliminadas: {total_calificaciones:,}")
            print(f"üìà Promedios Trimestrales eliminados: {promedios_trimestrales:,}")
            print(f"üìä Promedios Anuales eliminados: {promedios_anuales:,}")
            print("\nüìä VERIFICACI√ìN FINAL:")
            print(f"   Evaluaciones Entregables restantes: {eval_entregables_despues}")
            print(f"   Evaluaciones Participaci√≥n restantes: {eval_participacion_despues}")
            print(f"   Calificaciones restantes: {total_calificaciones_despues}")
            print(f"   Promedios Trimestrales restantes: {promedios_trimestrales_despues}")
            print(f"   Promedios Anuales restantes: {promedios_anuales_despues}")
            print("="*60)
            
            total_eliminado = (eval_entregables + eval_participacion + 
                             total_calificaciones + promedios_trimestrales + promedios_anuales)
            print(f"üéØ TOTAL DE REGISTROS ELIMINADOS: {total_eliminado:,}")
            print("‚úÖ Operaci√≥n completada exitosamente!")
            
    except Exception as e:
        print(f"‚ùå Error al eliminar datos: {str(e)}")
        print("‚ùå La transacci√≥n ha sido revertida.")

def eliminar_solo_calificaciones():
    """
    Elimina solo las calificaciones, manteniendo las evaluaciones.
    """
    try:
        with transaction.atomic():
            total_calificaciones = Calificacion.objects.count()
            promedios_trimestrales = PromedioTrimestral.objects.count()
            promedios_anuales = PromedioAnual.objects.count()
            
            print("\nüóëÔ∏è Eliminando solo calificaciones y promedios...")
            
            PromedioAnual.objects.all().delete()
            PromedioTrimestral.objects.all().delete()
            Calificacion.objects.all().delete()
            
            print(f"‚úÖ Eliminadas {total_calificaciones:,} calificaciones")
            print(f"‚úÖ Eliminados {promedios_trimestrales:,} promedios trimestrales")
            print(f"‚úÖ Eliminados {promedios_anuales:,} promedios anuales")
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

def main():
    """Funci√≥n principal con men√∫ de opciones"""
    print("\n" + "üö®"*20)
    print("‚ö†Ô∏è  SCRIPT DE ELIMINACI√ìN MASIVA  ‚ö†Ô∏è")
    print("üö®"*20)
    print("‚ö†Ô∏è ESTA OPERACI√ìN ES IRREVERSIBLE ‚ö†Ô∏è")
    print("‚ö†Ô∏è HAGA BACKUP ANTES DE CONTINUAR ‚ö†Ô∏è")
    
    # Mostrar estad√≠sticas actuales
    mostrar_estadisticas_antes()
    
    print("\nüîß OPCIONES DISPONIBLES:")
    print("1Ô∏è‚É£ Eliminar TODO (evaluaciones + calificaciones + promedios)")
    print("2Ô∏è‚É£ Eliminar solo calificaciones y promedios (mantener evaluaciones)")
    print("3Ô∏è‚É£ Mostrar estad√≠sticas y salir")
    print("0Ô∏è‚É£ Cancelar y salir")
    
    opcion = input("\n‚û°Ô∏è Selecciona una opci√≥n (0-3): ").strip()
    
    if opcion == "1":
        print("\n‚ö†Ô∏è VAS A ELIMINAR TODO EL SISTEMA DE EVALUACIONES ‚ö†Ô∏è")
        confirmacion = input("Escribe 'ELIMINAR TODO' para confirmar: ").strip()
        if confirmacion == "ELIMINAR TODO":
            eliminar_todo()
        else:
            print("‚ùå Confirmaci√≥n incorrecta. Operaci√≥n cancelada.")
            
    elif opcion == "2":
        print("\n‚ö†Ô∏è VAS A ELIMINAR TODAS LAS CALIFICACIONES Y PROMEDIOS ‚ö†Ô∏è")
        confirmacion = input("Escribe 'ELIMINAR CALIFICACIONES' para confirmar: ").strip()
        if confirmacion == "ELIMINAR CALIFICACIONES":
            eliminar_solo_calificaciones()
        else:
            print("‚ùå Confirmaci√≥n incorrecta. Operaci√≥n cancelada.")
            
    elif opcion == "3":
        print("üìä Estad√≠sticas mostradas arriba.")
        
    elif opcion == "0":
        print("‚úÖ Operaci√≥n cancelada por el usuario.")
        
    else:
        print("‚ùå Opci√≥n inv√°lida.")

if __name__ == '__main__':
    main()