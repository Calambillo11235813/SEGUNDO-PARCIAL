# Generated by Django 5.2.1 on 2025-06-06 22:40

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Cursos', '0014_create_promedio_tables'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionEvaluacionMateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porcentaje', models.DecimalField(decimal_places=2, help_text='Porcentaje que este tipo de evaluación representa en la nota final (0-100)', max_digits=5)),
                ('activo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración de Evaluación por Materia',
                'verbose_name_plural': 'Configuraciones de Evaluación por Materias',
                'db_table': 'configuracion_evaluacion_materia',
            },
        ),
        migrations.CreateModel(
            name='EvaluacionEntregable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('porcentaje_nota_final', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('activo', models.BooleanField(default=True)),
                ('publicado', models.BooleanField(default=False)),
                ('fecha_asignacion', models.DateField()),
                ('fecha_entrega', models.DateField()),
                ('fecha_limite', models.DateField(blank=True, null=True)),
                ('nota_maxima', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('nota_minima_aprobacion', models.DecimalField(decimal_places=2, default=51.0, max_digits=5)),
                ('permite_entrega_tardia', models.BooleanField(default=False)),
                ('penalizacion_tardio', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
            ],
            options={
                'db_table': 'evaluaciones_entregables',
            },
        ),
        migrations.CreateModel(
            name='EvaluacionParticipacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('porcentaje_nota_final', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('activo', models.BooleanField(default=True)),
                ('publicado', models.BooleanField(default=False)),
                ('fecha_registro', models.DateField()),
                ('criterios_participacion', models.TextField(blank=True, null=True)),
                ('escala_calificacion', models.CharField(choices=[('NUMERICA', 'Numérica (0-100)'), ('CUALITATIVA', 'Cualitativa (MB/B/R/M)')], default='NUMERICA', max_length=20)),
            ],
            options={
                'db_table': 'evaluaciones_participacion',
            },
        ),
        migrations.RemoveField(
            model_name='evaluacion',
            name='materia',
        ),
        migrations.RemoveField(
            model_name='evaluacion',
            name='tipo_evaluacion',
        ),
        migrations.RemoveField(
            model_name='evaluacion',
            name='trimestre',
        ),
        migrations.RemoveConstraint(
            model_name='promedioanual',
            name='unique_promedio_anual',
        ),
        migrations.RemoveConstraint(
            model_name='promediotrimestral',
            name='unique_promedio_trimestral',
        ),
        migrations.RemoveConstraint(
            model_name='trimestre',
            name='unique_trimestre_año',
        ),
        migrations.AlterUniqueTogether(
            name='calificacion',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='calificacion',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='calificacion',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='promedioanual',
            unique_together={('estudiante', 'materia', 'año_academico')},
        ),
        migrations.AlterUniqueTogether(
            name='promediotrimestral',
            unique_together={('estudiante', 'materia', 'trimestre')},
        ),
        migrations.AlterUniqueTogether(
            name='trimestre',
            unique_together={('numero', 'año_academico')},
        ),
        migrations.AddField(
            model_name='configuracionevaluacionmateria',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_evaluacion_creadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='configuracionevaluacionmateria',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_evaluacion', to='Cursos.materia'),
        ),
        migrations.AddField(
            model_name='configuracionevaluacionmateria',
            name='tipo_evaluacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cursos.tipoevaluacion'),
        ),
        migrations.AddField(
            model_name='evaluacionentregable',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_evaluaciones', to='Cursos.materia'),
        ),
        migrations.AddField(
            model_name='evaluacionentregable',
            name='tipo_evaluacion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Cursos.tipoevaluacion'),
        ),
        migrations.AddField(
            model_name='evaluacionentregable',
            name='trimestre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_evaluaciones', to='Cursos.trimestre'),
        ),
        migrations.AddField(
            model_name='evaluacionparticipacion',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_evaluaciones', to='Cursos.materia'),
        ),
        migrations.AddField(
            model_name='evaluacionparticipacion',
            name='tipo_evaluacion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Cursos.tipoevaluacion'),
        ),
        migrations.AddField(
            model_name='evaluacionparticipacion',
            name='trimestre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_evaluaciones', to='Cursos.trimestre'),
        ),
        migrations.RemoveField(
            model_name='calificacion',
            name='evaluacion',
        ),
        migrations.AlterUniqueTogether(
            name='configuracionevaluacionmateria',
            unique_together={('materia', 'tipo_evaluacion')},
        ),
        migrations.DeleteModel(
            name='Evaluacion',
        ),
    ]
