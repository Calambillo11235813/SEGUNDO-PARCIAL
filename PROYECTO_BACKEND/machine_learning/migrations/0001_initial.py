# Generated by Django 5.2.1 on 2025-06-12 13:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Cursos', '0018_asistencia_trimestre'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetAcademico',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('total_registros', models.IntegerField(default=0)),
                ('año_inicio', models.IntegerField()),
                ('año_fin', models.IntegerField()),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Dataset Académico',
                'verbose_name_plural': 'Datasets Académicos',
                'db_table': 'ml_dataset_academico',
            },
        ),
        migrations.CreateModel(
            name='ModeloML',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
                ('algoritmo', models.CharField(choices=[('RANDOM_FOREST', 'Random Forest'), ('LINEAR_REGRESSION', 'Regresión Lineal'), ('GRADIENT_BOOSTING', 'Gradient Boosting'), ('NEURAL_NETWORK', 'Red Neuronal')], max_length=50)),
                ('mae_score', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('mse_score', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('r2_score', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('fecha_entrenamiento', models.DateTimeField(auto_now_add=True)),
                ('archivo_modelo', models.CharField(max_length=500)),
                ('activo', models.BooleanField(default=True)),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modelos_creados', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modelos', to='machine_learning.datasetacademico')),
            ],
            options={
                'verbose_name': 'Modelo ML',
                'verbose_name_plural': 'Modelos ML',
                'db_table': 'ml_modelo',
                'ordering': ['-fecha_entrenamiento'],
            },
        ),
        migrations.CreateModel(
            name='MetricasModelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mae_cv_mean', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('mae_cv_std', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('r2_cv_mean', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('r2_cv_std', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('total_predicciones', models.IntegerField(default=0)),
                ('total_validaciones', models.IntegerField(default=0)),
                ('precision_real', models.DecimalField(blank=True, decimal_places=4, help_text='Precisión basada en validaciones reales', max_digits=5, null=True)),
                ('predicciones_bajo', models.IntegerField(default=0)),
                ('predicciones_medio', models.IntegerField(default=0)),
                ('predicciones_alto', models.IntegerField(default=0)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('modelo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metricas_detalladas', to='machine_learning.modeloml')),
            ],
            options={
                'verbose_name': 'Métricas del Modelo',
                'verbose_name_plural': 'Métricas de los Modelos',
                'db_table': 'ml_metricas_modelo',
            },
        ),
        migrations.CreateModel(
            name='PrediccionAcademica',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('promedio_notas_anterior', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porcentaje_asistencia', models.DecimalField(decimal_places=2, max_digits=5)),
                ('promedio_participaciones', models.DecimalField(decimal_places=2, max_digits=5)),
                ('materias_cursadas', models.IntegerField()),
                ('evaluaciones_completadas', models.IntegerField()),
                ('prediccion_numerica', models.DecimalField(decimal_places=2, max_digits=5)),
                ('nivel_rendimiento', models.CharField(choices=[('BAJO', 'Bajo (0-60)'), ('MEDIO', 'Medio (60-80)'), ('ALTO', 'Alto (80-100)')], max_length=10)),
                ('confianza', models.DecimalField(decimal_places=4, max_digits=5)),
                ('fecha_prediccion', models.DateTimeField(auto_now_add=True)),
                ('rendimiento_real', models.DecimalField(blank=True, decimal_places=2, help_text='Rendimiento real para validar la predicción', max_digits=5, null=True)),
                ('validada', models.BooleanField(default=False)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicciones_ml', to=settings.AUTH_USER_MODEL)),
                ('modelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicciones', to='machine_learning.modeloml')),
                ('realizada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predicciones_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predicción Académica',
                'verbose_name_plural': 'Predicciones Académicas',
                'db_table': 'ml_prediccion',
                'ordering': ['-fecha_prediccion'],
            },
        ),
        migrations.CreateModel(
            name='RegistroEstudianteML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promedio_notas_anterior', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porcentaje_asistencia', models.DecimalField(decimal_places=2, max_digits=5)),
                ('promedio_participaciones', models.DecimalField(decimal_places=2, max_digits=5)),
                ('materias_cursadas', models.IntegerField()),
                ('evaluaciones_completadas', models.IntegerField()),
                ('rendimiento_futuro', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros', to='machine_learning.datasetacademico')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_ml', to=settings.AUTH_USER_MODEL)),
                ('trimestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_ml', to='Cursos.trimestre')),
            ],
            options={
                'verbose_name': 'Registro Estudiante ML',
                'verbose_name_plural': 'Registros Estudiantes ML',
                'db_table': 'ml_registro_estudiante',
                'unique_together': {('estudiante', 'trimestre', 'dataset')},
            },
        ),
    ]
